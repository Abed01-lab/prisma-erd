generator client {
    provider = "prisma-client-js"
}

generator erd {
    provider = "prisma-erd-generator"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URI")
}

enum BonusType {
    LATE
    EARLY
    REVIEWS
}

model Bonus {
    id        String    @id @unique @db.Uuid
    bonustype BonusType
    factor    Float
}

enum PayCheckType {
    TOEMPLOYEE
    TORESTAURANT
}

model Payment {
    id     String       @id @db.Uuid
    from   String       @db.Uuid
    to     String       @db.Uuid
    amount Float
    type   PayCheckType
}

model Receipt {
    id         String   @id @unique @db.Uuid
    customerId String
    order      Order    @relation(fields: [orderId], references: [id])
    amount     Float
    time       DateTime
    orderId    String   @unique @db.Uuid
}

model Address {
    id        String @unique @db.Uuid
    street    String
    streetNr  String
    zipcode   String
    longitude Float
    latitude  Float
    cityId    String @db.Uuid

    @@id([id])
}

model LoginInfo {
    id       String @id @unique @db.Uuid
    username String
    password Bytes
    email    String
    hasRole  Roles
}

model Customer {
    id          String   @id @unique @db.Uuid
    firstname   String
    lastname    String
    phone       Int
    birtdate    DateTime
    address     String
    loginInfoId String
}

model Restaurant {
    id          String @id @unique @db.Uuid
    name        String
    adress      String
    loginInfoId String
    cityId      String
    Menu        Menu?
    kontoNr     Int
    regNr       Int
    CVR         Int    @unique
}

model Menu {
    id            String      @id @unique @db.Uuid
    title         String
    MenuItems     MenuItems[]
    hasRestaurant Restaurant  @relation(fields: [restaurantId], references: [id])
    restaurantId  String      @unique @db.Uuid
}

enum Type {
    PIZZA
    PASTARETTTER
    TILBEHOER
}

model MenuItems {
    id          String @id @unique @db.Uuid
    name        String
    description String
    price       String
    type        Type
    hasMenu     Menu   @relation(fields: [menuId], references: [id])
    menuId      String @db.Uuid
}

enum Status {
    STARTED
    MADE
    DELIVERING
    DELEVERED
}

model Order {
    id             String      @id @unique @db.Uuid
    orderStatus    OrdreStatus @relation(fields: [ordreStatusId], references: [id])
    statusDetails  String
    hasOrderItems  OrderItem[]
    addressAddress String
    Receipt        Receipt?
    ordreStatusId  String      @db.Uuid
}

model OrderItem {
    id         String  @id @unique @db.Uuid
    preference String
    price      Float
    quantity   Int
    Order      Order?  @relation(fields: [orderId], references: [id])
    orderId    String? @db.Uuid
}

model Employee {
    id          String  @id @unique @db.Uuid
    firstname   String
    lastname    String
    active      Boolean
    loginInfoId String  @db.Uuid
    address     String
    kontoNr     Int
    regNr       Int
}

model OrdreStatus {
    id        String   @id @unique @db.Uuid
    timeStamp DateTime
    status    Status
    Order     Order[]
}

enum Roles {
    ADMIN
    CUSTOMER
    RESTAURANT
    EMPLOYEE
}

model Company {
    id      String @id @unique @db.Uuid
    name    String
    kontoNr Int
    regNr   Int
}
